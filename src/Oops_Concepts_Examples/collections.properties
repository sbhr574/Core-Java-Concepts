

1. //ArrayList

import java.util.ArrayList;
	
public class toy {

	public static void main(String[] args) throws ClassNotFoundException  {
		ArrayList ar=new ArrayList();
		ArrayList ar1=new ArrayList();
		ar1.add(2455);
		ar.add("are");
		ar.add('r');
		ar.add(2);
		ar.add( 1,3);
		ar.addAll(1, ar1);
		ar1.addAll(ar);
		ar1.remove(2);
		System.out.println(ar.add(34.09));
		for(int i=0;i<ar1.size();i++){
			System.out.println(ar1.get(i));
		}
		
		//Array can hold only homogenious objects
		toy t=new toy();
		Object[] obj=new Object[1000];
		obj[0]=new toy();
		
		//Array can't hold hetrogenious objects
		Student[] s=new Student[123];
		s[0]=new Student();	//correct
		s[1]=new toy();	//incorrect
	}

}

2. //LinkedList

import java.util.LinkedList;

public class dog {

	public static void main(String[] args) {
		LinkedList l=new LinkedList();
		l.add(12);
		l.add(23);
		l.add(121);
		l.add(32);
		l.add(345);
		l.remove(2);
		l.add(null);
		
		//Below methods for implement stack and queues
		l.addFirst("first");
		l.addLast("last");
		System.out.println(l.getFirst());
		System.out.println(l.getLast());
		System.out.println(l.removeFirst());
		System.out.println(l.removeLast());
		
		LinkedList l1=new LinkedList();
		l1.addAll(l);
		for(int i=0;i<l1.size();i++){
			System.out.println(l1.get(i));
		}
		ListIterator itr=l.listIterator();
		while(itr.hasNext()){             //hasNext returning true if the value is present in list
			System.out.println(itr.next());
		}
	}
}

3. // Vector

import java.util.Vector;

public class call
{
	public static void main(String arg[]){
		
		//example 1: of vector contructor 
		Vector v1=new Vector();
		System.out.println(v1.capacity()); //By defualt it allways having 10 capacity
		for(int i =0;i<10;i++){
			v1.addElement(i);
		}
		System.out.println(v1.capacity());
		v1.addElement(23);
		System.out.println(v1.capacity());
		System.out.println(v1);
		
		//example 2: of vector contructor
		Vector v2=new Vector(25);
		System.out.println(v2.capacity()); 
		for(int i =0;i<10;i++){
			v2.addElement(i);
		}
		System.out.println(v2.capacity());
		v2.addElement(23);
		System.out.println(v2.capacity());
		System.out.println(v2);
		
		//example 3: of vector contructor
				Vector v3=new Vector(10,5);
				System.out.println(v3.capacity()); //10
				for(int i =0;i<10;i++){
					v3.addElement(i);
				}
				System.out.println(v3.capacity());//10
				v3.addElement(23);
				System.out.println(v3.capacity());//15
				System.out.println(v3);
	}
}
